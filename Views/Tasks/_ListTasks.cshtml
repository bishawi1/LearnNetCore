@model TaskDetailsListViewModel
@{
    var WaitingCount = 0;
    var InProgressCount = 0;
    var DoneCount = 0;
    var ApprovedCount = 0;
    var RejectedCount = 0;
    WaitingCount = Model.CountByStatus.WaitingCount;
    InProgressCount = Model.CountByStatus.InProgressCount;
    DoneCount = Model.CountByStatus.DoneCount;
    ApprovedCount = Model.CountByStatus.ApprovedCount;
    RejectedCount = Model.CountByStatus.RejectedCount;
}
<div class="flex-container">
    <div class="column">
        @*<form asp-action="ListWaitingTasks" asp-controller="Tasks" method="get" )>*@
        <button id="Waiting" class="numberCircle btn btn-secondary text-center m-1 " style="width:50px;border-radius:20;">@WaitingCount</button>
        @*</form>*@

        @*<a id="Waiting" asp-action="ListWaitingTasks" asp-controller="Tasks" class="numberCircle btn btn-secondary text-center m-1" style="width:50px;border-radius:20;">0</a>*@
    </div>
    <div class="column">
        <button id="InProgress" class="numberCircle btn btn-primary text-center m-1" style="width:50px;border-radius:20;">@InProgressCount</button>
        @*<a id="InProgress" asp-action="ListInProgressTasks" asp-controller="Tasks" class="numberCircle btn btn-primary text-center m-1" style="width:50px;border-radius:20;">0</a>*@
    </div>
    <div class="column">
        <button id="Done" class="numberCircle btn btn-warning text-center m-1" style="width:50px;border-radius:20;">@DoneCount</button>
    </div>
    <div class="column">
        <button id="Approved" class="numberCircle btn btn-success text-center m-1" style="width:50px;border-radius:20;">@ApprovedCount</button>
    </div>
    <div class="column">
        <button id="Rejected" class="numberCircle btn btn-danger text-center m-1" style="width:50px;border-radius:20;">@RejectedCount</button>
    </div>
    <div class="column">
        <button id="showAll" class="numberCircle btn btn-outline-primary text-center m-1" style="width:50px;border-radius:20;">All</button>
    </div>
</div>

<div style=" border:solid 1px black; padding:3px;">
    <table class="table table-hover" id="myTable">

        <thead class="thead-dark">
            <tr>
                <th>Task Date</th>
                <th>Task Time</th>
                <th>Task Subject</th>
                <th>Task Owner</th>
                <th>Responsible for Task</th>
                <th style="width:100px;">Task Status</th>
                <th style="width:30px;"></th>
                <th style="width:30px;"></th>

            </tr>
        </thead>



        @{ string strProjectName = ""; }
        @foreach (var task in Model.TaskDetails)
        {
            @if (task.strGroupBy == "ProjectName")
            {
                @if (strProjectName != task.ProjectName)
                {
                    strProjectName = task.ProjectName;
                    <tr>
                        <th colspan="7">
                            <h1>@task.ProjectName</h1>
                        </th>
                    </tr>
                }
            }
            else if (task.strGroupBy == "TaskOwnerName")
            {
                @if (strProjectName != task.TaskOwnerName)
                {
                    strProjectName = task.TaskOwnerName;
                    <tr>
                        <th colspan="7">
                            <h3 class="text-center"> @task.TaskOwnerName</h3>
                        </th>

                    </tr>
                }
            }

            else if (task.strGroupBy == "TaskResponsibleName")
            {
                @if (strProjectName != task.TaskResponsibleName)
                {
                    strProjectName = task.TaskResponsibleName;
                    <tr>
                        <th colspan="7">
                            <h3> @task.TaskResponsibleName</h3>
                        </th>

                    </tr>
                }
            }

            else
            {
                if (task.strGroupBy == "TaskStatusCode")
                {
                    @if (strProjectName != task.TaskStatusCode)
                    {
                        strProjectName = task.TaskStatusCode;
                        <tr>
                            <th colspan="7">
                                <h3> @task.TaskStatusCode</h3>
                            </th>

                        </tr>
                    }
                }
            }

            <tr>
                <td>@task.TaskStartDate.ToString("dd-MM-yyyy")</td>
                <td>@task.TaskStartTime</td>
                <td>@task.TaskSubject</td>
                <td>@task.TaskOwnerName</td>
                <td>@task.TaskResponsibleName</td>
                @if (task.TaskStatusId == 1)
                {
                    <td class="bg-secondary text-center">@task.StatusName </td>
                }
                else if (task.TaskStatusId == 2)
                {
                    <td class="bg-primary text-center">@task.StatusName </td>
                }
                else if (task.TaskStatusId == 3)
                {
                    <td class="bg-danger text-center">@task.StatusName </td>
                }
                else if (task.TaskStatusId == 4)
                {
                    <td class="bg-warning text-center">@task.StatusName </td>
                }
                else if (task.TaskStatusId == 5)
                {
                    <td class="badge-success text-center">@task.StatusName </td>
                }
                else
                {
                    <td>@task.StatusName </td>

                }

                <td><a class="btn btn-primary btn-sm rounded-circle " style="width:auto" asp-action="Details" asp-controller="Tasks" asp-route-Id="@task.Id"><i class="fa fa-info-circle"></i></a></td>
                <td>
                    <form asp-action="DeleteCustomer" asp-route-Id="@task.Id" method="post">
                        <span id="confirmDeleteSpan_@task.Id" style="display:none">
                            <span>Are you sure you want to delete?</span>
                            <button type="submit" class="btn btn-danger"><i class="fa fa-check-circle"></i>Yes</button>
                            <a href="#" class="btn btn-primary"
                               onclick="confirmDelete('@task.Id',false)"><i class="fa fa-times-circle"></i> No</a>
                        </span>
                        <span id="deleteSpan_@task.Id">
                            <a href="#" class="btn btn-danger rounded-circle btn-sm" style="width:auto"
                               onclick="confirmDelete('@task.Id',true)"><i class="fa fa-trash"></i></a>
                        </span>





                    </form>
                </td>
            </tr>

        }


    </table>
</div>


    <script>
        //////////////////////////////// Status filter
        $('#Waiting').click(function () {
            $.ajax({
                url: '/Tasks/ListWaitingTasks/?TaskOwnerId=' + $("#TaskOwnerId").val() + '&TaskResponsibleId='+ $("#TaskResponsibleId").val() + '&ProjectId=' + $("#ProjectId").val() + '&FromTaskDate=' + $("#FromTaskDate").val() + '&ToTaskDate=' + $("#ToTaskDate").val()+ '&BranchId=' + $('#BranchId').val()+ '&ContinuousTask=' +  $('#ContinuousTask').is(":checked") + '&strGroupBy=All'  ,
                type: 'Get',
                success: function (response) {
                    $('#showWaiting').html(response);
                    $('#myTable').DataTable();
                }
            });
        });

        $('#InProgress').click(function () {
            $.ajax({
                url: '/Tasks/ListInProgressTasks/?TaskOwnerId=' + $("#TaskOwnerId").val() + '&TaskResponsibleId='+ $("#TaskResponsibleId").val() + '&ProjectId =' + $("#ProjectId").val() + '&FromTaskDate=' + $("#FromTaskDate").val() + '&ToTaskDate=' + $("#ToTaskDate").val()+ '&BranchId=' + $('#BranchId').val()+ '&ContinuousTask=' +  $('#ContinuousTask').is(":checked") + '&strGroupBy=All'  ,
                type: 'Get',
                success: function (response) {
                    $('#showWaiting').html(response);
                    $('#myTable').DataTable();
                }
            });
        });

        $('#Done').click(function () {
            $.ajax({
                url: '/Tasks/ListDoneTasks/?TaskOwnerId=' + $("#TaskOwnerId").val() + '&TaskResponsibleId='+ $("#TaskResponsibleId").val() + '&ProjectId =' + $("#ProjectId").val() + '&FromTaskDate=' + $("#FromTaskDate").val() + '&ToTaskDate=' + $("#ToTaskDate").val()+ '&BranchId=' + $('#BranchId').val()+ '&ContinuousTask=' +  $('#ContinuousTask').is(":checked") + '&strGroupBy=All'  ,
                type: 'Get',
                success: function (response) {
                    $('#showWaiting').html(response);
                    $('#myTable').DataTable();
                }
            });
        });

        $('#Approved').click(function () {
            $.ajax({
                url: '/Tasks/ListApprovedTasks/?TaskOwnerId=' + $("#TaskOwnerId").val() + '&TaskResponsibleId='+ $("#TaskResponsibleId").val() + '&ProjectId =' + $("#ProjectId").val() + '&FromTaskDate=' + $("#FromTaskDate").val() + '&ToTaskDate=' + $("#ToTaskDate").val()+ '&BranchId=' + $('#BranchId').val()+ '&ContinuousTask=' +  $('#ContinuousTask').is(":checked") + '&strGroupBy=All'  ,
                type: 'Get',
                success: function (response) {
                    $('#showWaiting').html(response);
                    $('#myTable').DataTable();
                }
            });
        });
        $('#Rejected').click(function () {
            $.ajax({
                url: '/Tasks/ListRejectedTasks/?TaskOwnerId=' + $("#TaskOwnerId").val() + '&TaskResponsibleId='+ $("#TaskResponsibleId").val() + '&ProjectId =' + $("#ProjectId").val() + '&FromTaskDate=' + $("#FromTaskDate").val() + '&ToTaskDate=' + $("#ToTaskDate").val()+ '&BranchId=' + $('#BranchId').val()+ '&ContinuousTask=' +  $('#ContinuousTask').is(":checked") + '&strGroupBy=All'  ,
                type: 'Get',
                success: function (response) {
                    $('#showWaiting').html(response);
                    $('#myTable').DataTable();
                }
            });
        });

        $('#showAll').click(function () {
            $.ajax({
                url: '/Tasks/ListTasksPartial/?TaskOwnerId=' + $("#TaskOwnerId").val() + '&TaskResponsibleId='+ $("#TaskResponsibleId").val() + '&ProjectId =' + $("#ProjectId").val() + '&FromTaskDate=' + $("#FromTaskDate").val() + '&ToTaskDate=' + $("#ToTaskDate").val()+ '&BranchId=' + $('#BranchId').val()+ '&ContinuousTask=' +  $('#ContinuousTask').is(":checked") + '&strGroupBy=All'  ,
                type: 'Get',
                success: function (response) {
                    $('#showWaiting').html(response);
                    $('#myTable').DataTable();
                }
            });
        });

                                                      //data:$('form').serialize(),// JSON.stringify(formData),

    </script>
